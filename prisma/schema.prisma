// datasource and generator setup
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id String @id @default(cuid())

  firstName String
  lastName  String
  email     String @unique
  password  String

  role UserRole @default(USER)

  otp          String?
  otpExpiresAt DateTime?
  isVerified   Boolean   @default(false)

  accessToken  String?
  refreshToken String?

   enrollments Enrollment[]
  reviews   Review[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}


model Course {
  id          String       @id @default(uuid())
  title       String
  subtitle    String
  price       Float
  courseType  CourseType
  level        SkillLevel  
  duration    Int
  language    String
  classes     String
  description String
  demoVideo   String
  thumnail    String
  status      CourseStatus @default(ONGOING)
  modules     Module[]
  resources   Resource[]
  enrollments Enrollment[]
  reviews     Review[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}
enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}
enum CourseType {
  PAID
  FREE
}

enum CourseStatus {
  UPCOMING
  ONGOING
}

model Module {
  id        String   @id @default(uuid())
  title     String
  order     Int      
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])
  videos    Video[]
  createdAt DateTime @default(now())
}

model Video {
  id        String   @id @default(uuid())
  title     String
  url       String
  order     Int
  moduleId  String
  module    Module   @relation(fields: [moduleId], references: [id])
  createdAt DateTime @default(now())
}

model Resource {
  id        String   @id @default(uuid())
  name      String
  type      ResourceType
  url       String
  courseId  String
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
}

enum ResourceType {
  PDF
  DOC
  LINK
}

model Enrollment {
  id        String   @id @default(uuid())
  userId    String
  courseId  String
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
  enrolledAt DateTime @default(now())
}

model Review {
  id        String   @id @default(uuid())
  rating    Int      @default(5)
  comment   String
  userId    String
  courseId  String
  user      User     @relation(fields: [userId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
}

model Contact{
  id        String   @id @default(uuid())
  name      String
  email     String
  phone     String
  address   String
  city      String

}